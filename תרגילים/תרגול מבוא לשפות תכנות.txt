.1 איזו שפה המחשב מבין?
שפת מכונה היא בינארית
.2 למה המחשב משתמש רק בספרות 0 ו1-?
הוא עובד בסוף בצורה פיזית , ופיזית יש שני מצבים, יש או אין. 
.3 צרו )והראו עם טבלה או עם סכום של חזקות 2( את המספרים הבאים בבינארי:
12    110 .a 
1        1.   b
40 101000    .c
62         111110.d
23            10111.e
15 1111.f
.4 באיזה בסיס סיפרתי אנו משתמשים ביומיום?
10
.5 מה היתרונות של כתיבה בשפת בינארי?
גישה ישירה ומדויקת
.6 מה החסרונות של כתיבה בשפת בינארי?
מסורבל ארוך כבד ומסובך להבנה 
.7 למה לא כדאי לתקשר עם המחשב בשפה טבעית?
זה יבוא על חשבון הדיוק מכיוון ששפה אנשית יכולה להתפרש במלא מובנים בניגוד לשפת מחשב שבה לכל ביטוי יש מקרה אחד בלבד שמתאים לו
.8 מהו הפתרון לתקשורת עם מחשב?
משהו באמצע שיקצר תהליכים ויגזול מיכולת השליטה אבל מצד שני יהיה יותר אינטואטיבי וברור
.9 מהם היתרונות של שפות תכנות?
פשטות מהירות הבנה ברורה ויעילות
.10 מה מאפיין שפות Level Low?
שפה ברורה ואין צטרך להתעסק עם דברים שנעשים מאחורי הקלעים
.11 באילו מצבים נעדיף שפות Level High?
פיתוח מוצר שבו זמן התכנות יותר יקר לנו מזמן הריצה ועדיף לפתח מהר ובקלות מאשר לחסוך כמה מילי שניות
.12 באילו תחומים נפוצות שפות Level Mid?
שרתים קליינט סייד סקריפטים וכו
.13 למה יש כל כך הרבה שפות תכנות בעולם?
לכל שפה יש את היחידיות שלה וכמו שאי אפשר לעשות כלי שישמש אותי לכל סוגי השיפוצים כך גם בתכנות ישנם כלים רבים וכל אחד מתאים במיוחד לצרכים ספציפיים
.14 מה ההבדלים בין שפות קומפילציה לשפות מתורגמות?
שפות קומפילציה נבדקות לפני ההרצה כדי לראות שהכל תקין ושכלום לא יקרוס באמצע
.15 מהם יתרונות השפות שמתקמפלות )compilation?)
לא יהיה מקרה של קריסה באמצע הריצה
.16 מהם חסרונות של שפות מתורגמות )interpreted?)
יתכן ותהיה קריסה בזמן ריצה
.17 כיצד פועלת שפת #C מבחינת קומפילציה והרצה?
עוברת קומפילציה ורק אז מתורגמת לאסמבלי ורק אז רצה

   5 שאלות שדורשות הרחבה או חיפוש מידע נוסף:
.1 מהם BIT וBYTE ?כמה מידע אפשר לאחסן בהם? כמה מספרים?
BIT היא יחידת המידע הכי קטנה שיכולה להצביע על שני מצבים בלבד BYTE הוא רצף של 8 BIT ולכן יכול להצביע על 2**8 = 256 מצבים
?)AOT (Ahead of Time Compilation-ל JIT בין המרכזיים ההבדלים מהם .2
בJIT הריצה יותר איטית כי זה מתקמפל בזמן ריצה הריצה תלויה בהתקנות ובתלויות שיש על המכשיר בAOT הריצה מהירה כי הקוד מוכן אין שגיאות באמצע ואין תלות באיפה זה רץ כי יש קובץ הרצה מוכן שרשום כבר בשפת מכונה אבל מצד שני לוקח זמן להכין את הקובץ הזה
.3 מהם שימושים מודרניים נפוצים בשפות Level Low כמו Assembly?
כתיבת דברים המצריכים שליטה מוחלטת בזיכרון ובתכנית ללא בזבוז שום מילי שניה מיותרת כגון בורסות שהזמן חשוב או סייבר שהגישה המדויקת חשובה
.4 אילו שפות תכנות נפוצות קיימות היום וכיצד הן מסווגות )Low/Mid/High?)
פייתון, גאווה סקריפט, -היי לבל
C,C++ JAVA -מידל
ASSEMBLY - לואו

.5 מהם ההבדלים בין C ל-C++ מבחינת קומפילציה ושימושים?
C++  תומכת בOOP , יותר קשוחה מבחינת בדיקת הטיפוסים וזורקת יותר שגיאות במידה ויש בעיה, יש לה הרבה יותר אופציות ודברים מובנים ולכן קבצי הביניים הרבה יותר גדולים ומסורבלים

.6 מהם היתרונות של שפות מונחות עצמים )OOP )כמו #C על פני שפות פרוצדורליות?
ארגון קוד , אופציה לשימוש חוזר באותו קוד על ידי הורשה וכו וכך לחסוך באורך וסרבול הקוד, מאוד אינטואטיבי, אופציה לניהול הרשאות השינוי של משתנים והגבלת הגישה רק דרך פונקציות מובנות וכך למנוע טעויות 

.7 באיזה מקרים נרצה שפות מאיזו משפחה? מתי LOW מתי MID מתי HIGH?

בספקטרום בין שליטה לנוחות ומהירות נבחן מה הצרכים שלנו בתכנית הזו ונחליט על כמה ומה כדאי לוותר לטובת מה 

   5 שאלות העמקה והרחבה קונספטואלית:
.1 מה לדעתך ההשלכות של בחירת שפת תכנות מסוימת על ביצועי מערכת בפרויקט גדול?

יעילות המתכנתים זמן עבודה ובהירות הקוד אל מול ריצה מהירה מדויקת יותר ויכולת לשלוט יותר במה שקורה
 
.2 האם לדעתך בעתיד ניתן יהיה לכתוב קוד בשפה טבעית בלבד? מה החסמים לכך?
ניתן כבר היום אבל יש לכך מחיר שאתה לא יכול לסמוך מספיק על התוצאה במיוחד בעיין זה שהיא תעשה את זה בדרך הרצויה, אני חושב שזה ישתפר מהר מאוד ויגיע למצב שזה מספיק טוב בשביל לא לרצות לבזבז את הזמן שלנו יותר על כתיבה, אבל עדיין לעולם במערכות חשובות וקריטיות נאלץ להיות עם עיניים פקוחות בעיקר כדי לראות שהובנו כראוי והדרך שבה זה התבצע הגיונית 
.3 האם אפשר ליצור שפת תכנות חדשה שתשלב את יתרונות הקומפילציה עם הפשטות של
interpret ?אילו תכונות היית מכניס אליה?

.4 איך היית בוחר שפת תכנות לפרויקט בתחום הבינה המלאכותית?
לניתוח הנתונים ברמה הבסיסית כדאי שפה כמה שיותר נשלטת מכיוון שמדובר בכמות עצומה של מידע וכל רגע חשוב וקריטי 
לכל המעטפת מסביב מקובל להשתמש בפייתון
.5 כיצד משפיעה רמת ההפשטה של שפת תכנות על רמת הבאגים והשגיאות שנכתבות בקוד?
כמה שהשפה יותר קשוחה יש פחות סיכוי לטעויות אנוש TypeErore